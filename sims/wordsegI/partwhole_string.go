// Code generated by "stringer -type=PartWhole"; DO NOT EDIT.

package main

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NotPartNorWhole-0]
	_ = x[PartWord-1]
	_ = x[WholeWord-2]
	_ = x[PartWholeN-3]
}

const _PartWhole_name = "NotPartNorWholePartWordWholeWordPartWholeN"

var _PartWhole_index = [...]uint8{0, 15, 23, 32, 42}

func (i PartWhole) String() string {
	if i < 0 || i >= PartWhole(len(_PartWhole_index)-1) {
		return "PartWhole(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PartWhole_name[_PartWhole_index[i]:_PartWhole_index[i+1]]
}

func (i *PartWhole) FromString(s string) error {
	for j := 0; j < len(_PartWhole_index)-1; j++ {
		if s == _PartWhole_name[_PartWhole_index[j]:_PartWhole_index[j+1]] {
			*i = PartWhole(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: PartWhole")
}
